#!/bin/sh

### init
#{{{

FILE=`/usr/bin/realpath $0`
DIR=`/usr/bin/dirname ${FILE}`
BASENAME=`basename ${FILE}`

APACHE2_DIR="/etc/apache2"
PHP_DIR="/etc/php/8.2/apache2"
SYSTEM_DIR="/lib/systemd/system"

HELP="
Description: Setting up isolated LAMP on system
Usage: ${BASENAME}
"
if test "${1}" = "-h" -o "${1}" = "--help"
then
	echo "${HELP}"
	exit 0
fi

#}}}

### functions
#{{{

error ()
{
	/usr/bin/echo -e -n "\nERROR: ${BASENAME} - ${1}\n" >&2
	return 255
}

notice ()
{
	/usr/bin/echo -e -n "\nSTAGE: ${1}\n"
	if test ${?} -ne 0
	then
		return 255
	fi
	return 0
}

run ()
{

	COMMAND="${*}"
	echo "\n> ${COMMAND}"
	${COMMAND}
	if test ${?} -ne 0
	then
		error "Running the command failed with an error"
		exit 255
	fi
	return 0
	
}

#}}}

if ! true && notice "Template"
then #{{{
	echo "Script block template"
fi #}}}

if  true && notice "install required packages"
then #{{{

PACKAGE_NAMES="
	net-tools
	apache2 
	libapache2-mpm-itk 
	libapache2-mod-php 
	mariadb-server 
	php-mysql 
	apg
	pkexec
"
for PACKAGE_NAME in ${PACKAGE_NAMES}
do
	dpkg-query --status ${PACKAGE_NAME} 1> /dev/null 2> /dev/null
	if test ${?} -ne 0
	then
		run apt-get -y install ${PACKAGE_NAME}
	fi
done

fi #}}}

if  true && notice "disable default services"
then #{{{

SERVICE_NAMES="
	apache2
	mariadb
"
for SERVICE_NAME in ${SERVICE_NAMES}
do
	systemctl is-active ${SERVICE_NAME} 1> /dev/null 2> /dev/null
	if test $? -eq 0
	then
		run systemctl stop ${SERVICE_NAME}
	fi
	
	STATE=`systemctl show ${SERVICE_NAME} | grep UnitFileState`
	if test "${STATE}" = "UnitFileState=enabled"
	then
		run systemctl disable ${SERVICE_NAME}
	fi
done

fi #}}}

if  true && notice "apache2 - disable sites, enable mods"
then #{{{

SITE_NAMES=`ls ${APACHE2_DIR}/sites-enabled`
for SITE_NAME in ${SITE_NAMES}
do
	run a2dissite ${SITE_NAME}
done

MOD_NAMES="
	ssl
	rewrite
"
for MOD_NAME in ${MOD_NAMES}
do
	a2query -m ${MOD_NAME} 1> /dev/null 2> /dev/null
	if test ${?} -ne 0
	then
		run a2enmod ${MOD_NAME}
	fi
done

fi #}}}

if  true && notice "copy configuration files"
then #{{{

run cp -v ${DIR}/etc/apache2/apache2.conf ${APACHE2_DIR}/
run cp -v ${DIR}/etc/apache2/ports.conf ${APACHE2_DIR}/
run cp -v ${DIR}/etc/php/version/apache2/php.ini ${PHP_DIR}/

fi #}}}

if  true && notice "set up isolated services"
then #{{{

run cp -v ${DIR}/sbin/isolated_network /usr/local/sbin/
run cp -v ${DIR}/bin/sendmail_cap /usr/local/bin/

SERVICE_NAMES="
	isolated_mariadb.service
	isolated_apache2.service
	isolated_network.service
"
for SERVICE_NAME in ${SERVICE_NAMES}
do
	if test -f ${SYSTEM_DIR}/${SERVICE_NAME}
	then
		systemctl is-active ${SERVICE_NAME} 1> /dev/null 2> /dev/null
		if test $? -eq 0
		then
			run systemctl stop ${SERVICE_NAME}
		fi
	fi
	
	run cp -v ${DIR}/system/${SERVICE_NAME} ${SYSTEM_DIR}/
	
	STATE=`systemctl show ${SERVICE_NAME} | grep UnitFileState`
	if test "${STATE}" != "UnitFileState=enabled"
	then
		run systemctl enable ${SERVICE_NAME}
	fi
done

run systemctl daemon-reload

SERVICE_NAMES="
	isolated_network.service
	isolated_apache2.service
	isolated_mariadb.service
"
for SERVICE_NAME in ${SERVICE_NAMES}
do
	run systemctl start ${SERVICE_NAME}
done

fi #}}}

if  true && notice "copy site manager and isolated aplications starters"
then #{{{

run cp -v ${DIR}/sbin/site-manager /usr/local/sbin/

run cp -v ${DIR}/bin/isolated_firefox /usr/local/bin/
run cp -v ${DIR}/applications/isolated_firefox.desktop /usr/share/applications/
run cp -v ${DIR}/bin/isolated_root_terminal /usr/local/bin/
run cp -v ${DIR}/applications/isolated_root_terminal.desktop /usr/share/applications/

fi #}}}

exit 0

